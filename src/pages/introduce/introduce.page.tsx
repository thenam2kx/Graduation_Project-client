import React, { useEffect, useRef, useState } from 'react'
import './introduce.css'
import { useNavigate } from 'react-router'

interface VisibilityState {
  [key: string]: boolean
}

const AboutPage: React.FC = () => {
  const [isVisible, setIsVisible] = useState<VisibilityState>({})
  const sectionRefs = useRef<HTMLElement[]>([])
  const nav = useNavigate()

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            setIsVisible(prev => ({ ...prev, [entry.target.id]: true }))
          }
        })
      },
      { threshold: 0.1 }
    )

    sectionRefs.current.forEach((ref) => {
      if (ref) observer.observe(ref)
    })

    return () => observer.disconnect()
  }, [])

  const addToRefs = (el: HTMLElement | null) => {
    if (el && !sectionRefs.current.includes(el)) {
      sectionRefs.current.push(el)
    }
  }

  return (
    <div className="about-page">
      {/* Hero Section */}
      <section className="hero-section" id="hero" ref={addToRefs}>
        <div className="hero-background">
          <div className="floating-particles">
            {[...Array(20)].map((_, i) => (
              <div key={i} className={`particle particle-${i + 1}`}></div>
            ))}
          </div>
        </div>
        <div className={`hero-content ${isVisible.hero ? 'animate-in' : ''}`}>
          <h1 className="hero-title">
            <span className="brand-name">VIET</span>
            <span className="brand-accent">PERFUME</span>
          </h1>
          <p className="hero-subtitle">
            Kh√°m ph√° th·∫ø gi·ªõi h∆∞∆°ng th∆°m ƒë·∫≥ng c·∫•p
          </p>
          <div className="hero-description">
            <p>Th∆∞∆°ng hi·ªáu n∆∞·ªõc hoa h√†ng ƒë·∫ßu Vi·ªát Nam</p>
            <p>Chuy√™n cung c·∫•p n∆∞·ªõc hoa cao c·∫•p, ch√≠nh h√£ng</p>
          </div>
          <button className="cta-button" type="button" onClick={() => nav('/')}>
            <span>Kh√°m ph√° ngay</span>
            <div className="button-glow"></div>
          </button>
        </div>
      </section>

      {/* About Section */}
      <section className="about-section" id="about" ref={addToRefs}>
        <div className="container">
          <div className={`about-grid ${isVisible.about ? 'animate-in' : ''}`}>
            <div className="about-image">
              <div className="image-wrapper">
                <img
                  src="https://images.unsplash.com/photo-1588405748880-12d1d2a59f75?q=80&w=1000"
                  alt="Luxury Perfume"
                />
                <div className="image-overlay"></div>
              </div>
            </div>
            <div className="about-content">
              <h2 className="section-title">
                <span className="title-accent">C√¢u chuy·ªán</span> c·ªßa ch√∫ng t√¥i
              </h2>
              <div className="story-timeline">
                <div className="timeline-item">
                  <div className="timeline-dot"></div>
                  <div className="timeline-content">
                    <h3>10+ nƒÉm kinh nghi·ªám</h3>
                    <p>Tuy·ªÉn ch·ªçn k·ªπ l∆∞·ª°ng t·ª´ c√°c th∆∞∆°ng hi·ªáu n·ªïi ti·∫øng th·∫ø gi·ªõi</p>
                  </div>
                </div>
                <div className="timeline-item">
                  <div className="timeline-dot"></div>
                  <div className="timeline-content">
                    <h3>ƒêam m√™ h∆∞∆°ng th∆°m</h3>
                    <p>Truy·ªÅn t·∫£i gi√° tr·ªã phong c√°ch v√† c·∫£m x√∫c qua t·ª´ng m√πi h∆∞∆°ng</p>
                  </div>
                </div>
                <div className="timeline-item">
                  <div className="timeline-dot"></div>
                  <div className="timeline-content">
                    <h3>ƒê·ªôi ng≈© chuy√™n gia</h3>
                    <p>Am hi·ªÉu s√¢u s·∫Øc, t∆∞ v·∫•n t·∫≠n t√¢m cho t·ª´ng kh√°ch h√†ng</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Values Section */}
      <section className="values-section" id="values" ref={addToRefs}>
        <div className="container">
          <h2 className={`section-title center ${isVisible.values ? 'animate-in' : ''}`}>
            <span className="title-accent">Gi√° tr·ªã c·ªët l√µi</span>
          </h2>
          <div className={`values-grid ${isVisible.values ? 'animate-in' : ''}`}>
            {[
              {
                icon: 'üíé',
                title: 'Ch·∫•t l∆∞·ª£ng',
                desc: 'Cam k·∫øt 100% s·∫£n ph·∫©m ch√≠nh h√£ng, ƒë∆∞·ª£c ki·ªÉm ƒë·ªãnh nghi√™m ng·∫∑t',
                color: '#8B5CF6'
              },
              {
                icon: 'üé®',
                title: 'Tinh t·∫ø',
                desc: 'M·ªói h∆∞∆°ng th∆°m l√† m·ªôt t√°c ph·∫©m ngh·ªá thu·∫≠t ƒë∆∞·ª£c chƒÉm ch√∫t t·ªâ m·ªâ',
                color: '#EC4899'
              },
              {
                icon: '‚ù§Ô∏è',
                title: 'Kh√°ch h√†ng',
                desc: 'Tr·∫£i nghi·ªám kh√°ch h√†ng l√† ∆∞u ti√™n h√†ng ƒë·∫ßu trong m·ªçi ho·∫°t ƒë·ªông',
                color: '#F59E0B'
              }
            ].map((item, index) => (
              <div
                key={index}
                className="value-card"
                style={{
                  '--delay': `${index * 0.2}s`,
                  '--color': item.color
                } as React.CSSProperties}
              >
                <div className="card-glow"></div>
                <div className="value-icon">{item.icon}</div>
                <h3 className="value-title">{item.title}</h3>
                <p className="value-desc">{item.desc}</p>
                <div className="card-border"></div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="stats-section" id="stats" ref={addToRefs}>
        <div className="container">
          <div className={`stats-grid ${isVisible.stats ? 'animate-in' : ''}`}>
            {[
              { number: '10+', label: 'NƒÉm kinh nghi·ªám', icon: 'üèÜ' },
              { number: '50K+', label: 'Kh√°ch h√†ng tin t∆∞·ªüng', icon: 'üë•' },
              { number: '500+', label: 'S·∫£n ph·∫©m cao c·∫•p', icon: 'üåü' },
              { number: '99%', label: 'Kh√°ch h√†ng h√†i l√≤ng', icon: 'üíØ' }
            ].map((stat, index) => (
              <div
                key={index}
                className="stat-item"
                style={{ '--delay': `${index * 0.1}s` } as React.CSSProperties}
              >
                <div className="stat-icon">{stat.icon}</div>
                <div className="stat-number">{stat.number}</div>
                <div className="stat-label">{stat.label}</div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Mission Section */}
      <section className="mission-section" id="mission" ref={addToRefs}>
        <div className="container">
          <div className={`mission-content ${isVisible.mission ? 'animate-in' : ''}`}>
            <h2 className="section-title center">
              <span className="title-accent">T·∫ßm nh√¨n</span> & S·ª© m·ªánh
            </h2>
            <div className="mission-text">
              <p>
                VIETPERFUME h∆∞·ªõng ƒë·∫øn tr·ªü th√†nh <strong>h·ªá th·ªëng ph√¢n ph·ªëi n∆∞·ªõc hoa h√†ng ƒë·∫ßu ƒê√¥ng Nam √Å</strong>.
                Ch√∫ng t√¥i cam k·∫øt truy·ªÅn c·∫£m h·ª©ng v√† s·ª± t·ª± tin cho m·ªçi ng∆∞·ªùi th√¥ng qua h∆∞∆°ng th∆°m ‚Äì
                <em>m·ªôt ng√¥n ng·ªØ kh√¥ng l·ªùi c·ªßa c·∫£m x√∫c</em>.
              </p>
            </div>
            <div className="mission-features">
              {[
                { icon: 'üåç', text: 'M·ªü r·ªông to√†n khu v·ª±c' },
                { icon: '‚ú®', text: 'Truy·ªÅn c·∫£m h·ª©ng' },
                { icon: 'üí´', text: 'T·∫°o s·ª± t·ª± tin' }
              ].map((feature, index) => (
                <div key={index} className="feature-item">
                  <div className="feature-icon">{feature.icon}</div>
                  <span>{feature.text}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="cta-section" id="cta" ref={addToRefs}>
        <div className="container">
          <div className={`cta-content ${isVisible.cta ? 'animate-in' : ''}`}>
            <h2 className="cta-title">S·∫µn s√†ng kh√°m ph√° h∆∞∆°ng th∆°m c·ªßa b·∫°n?</h2>
            <p className="cta-subtitle">H√£y ƒë·ªÉ ch√∫ng t√¥i gi√∫p b·∫°n t√¨m ƒë∆∞·ª£c m√πi h∆∞∆°ng ho√†n h·∫£o</p>
            <div className="cta-buttons">
              <button className="btn-primary" type="button">
                <span>Mua s·∫Øm ngay</span>
                <div className="btn-shine"></div>
              </button>
              <button className="btn-secondary" type="button">
                <span>Li√™n h·ªá t∆∞ v·∫•n</span>
              </button>
            </div>
          </div>
        </div>
      </section>
    </div>
  )
}

export default AboutPage
